apply plugin: 'com.android.application'
android {
  compileSdkVersion rootProject.ext.compileSdkVersion
  defaultConfig {
    applicationId "com.jaakrecog.fingerprintusage"
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode 3
    versionName "1.0.3"
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    aaptOptions {
      // Files and dirs to omit from the packaged assets dir, modified to accommodate modern web apps.
      // Default: https://android.googlesource.com/platform/frameworks/base/+/282e181b58cf72b6ca770dc7ca5f91f135444502/tools/aapt/AaptAssets.cpp#61
      ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
    }
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  signingConfigs {
    release {
      def tmpFilePath = System.getProperty("user.home") + "/work/_temp/keystore/"
      def allFilesFromDir = new File(tmpFilePath).listFiles()

      if (allFilesFromDir != null) {
        def keystoreFile = allFilesFromDir.first()
        keystoreFile.renameTo("keystore/jaakrecog.jks")
      }

      storeFile = file("keystore/jaakrecog.jks")
      storePassword System.getenv("SIGNING_STORE_PASSWORD")
      keyAlias System.getenv("SIGNING_KEY_ALIAS")
      keyPassword System.getenv("SIGNING_KEY_PASSWORD")
    }
  }
}

repositories {
  mavenCentral()
  maven {
    url "https://devtools.jaakrecog.com/repository/jaakrecog/"
  }

}

dependencies {
  implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
  implementation project(':capacitor-android')
  testImplementation "junit:junit:$junitVersion"
  androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
  androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
  implementation project(':capacitor-cordova-android-plugins')
  implementation project(':jaakrecog-fingerprint')
  implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.4.32'
  def camerax_version = '1.1.0-alpha08'
  implementation "androidx.camera:camera-camera2:$camerax_version"
  implementation "androidx.camera:camera-lifecycle:$camerax_version"
  implementation "androidx.camera:camera-view:1.0.0-alpha28"

}

apply from: 'capacitor.build.gradle'
try {
  def servicesJSON = file('google-services.json')
  if (servicesJSON.text) {
    apply plugin: 'com.google.gms.google-services'
  }
} catch (Exception e) {
  logger.warn("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}
